[metadata]
name = ironic
summary = OpenStack Bare Metal Provisioning
description-file =
    README.rst
author = OpenStack
author-email = openstack-dev@lists.openstack.org
home-page = http://docs.openstack.org/developer/ironic/
classifier =
    Environment :: OpenStack
    Intended Audience :: Information Technology
    Intended Audience :: System Administrators
    License :: OSI Approved :: Apache Software License
    Operating System :: POSIX :: Linux
    Programming Language :: Python
    Programming Language :: Python :: 2
    Programming Language :: Python :: 2.7

[files]
packages =
    ironic
    ironic_tempest_plugin

[entry_points]
oslo.config.opts =
    ironic = ironic.conf.opts:list_opts

oslo.policy.enforcer =
    ironic = ironic.common.policy:get_oslo_policy_enforcer

oslo.policy.policies =
    ironic.api = ironic.common.policy:list_policies

console_scripts =
    ironic-api = ironic.cmd.api:main
    ironic-dbsync = ironic.cmd.dbsync:main
    ironic-conductor = ironic.cmd.conductor:main
    ironic-rootwrap = oslo_rootwrap.cmd:main

ironic.dhcp =
    neutron = ironic.dhcp.neutron:NeutronDHCPApi
    none = ironic.dhcp.none:NoneDHCPApi

ironic.drivers =
    agent_ilo = ironic.drivers.ilo:IloVirtualMediaAgentDriver
    agent_ipmitool = ironic.drivers.ipmi:AgentAndIPMIToolDriver
    agent_ipmitool_socat = ironic.drivers.ipmi:AgentAndIPMIToolAndSocatDriver
    agent_irmc = ironic.drivers.irmc:IRMCVirtualMediaAgentDriver
    agent_pxe_oneview = ironic.drivers.oneview:AgentPXEOneViewDriver
    agent_ssh = ironic.drivers.agent:AgentAndSSHDriver
    agent_ucs = ironic.drivers.agent:AgentAndUcsDriver
    fake = ironic.drivers.fake:FakeDriver
    fake_soft_power = ironic.drivers.fake:FakeSoftPowerDriver
    fake_agent = ironic.drivers.fake:FakeAgentDriver
    fake_inspector = ironic.drivers.fake:FakeIPMIToolInspectorDriver
    fake_ipmitool = ironic.drivers.fake:FakeIPMIToolDriver
    fake_ipmitool_socat = ironic.drivers.fake:FakeIPMIToolSocatDriver
    fake_ssh = ironic.drivers.fake:FakeSSHDriver
    fake_pxe = ironic.drivers.fake:FakePXEDriver
    fake_ilo = ironic.drivers.fake:FakeIloDriver
    fake_drac = ironic.drivers.fake:FakeDracDriver
    fake_snmp = ironic.drivers.fake:FakeSNMPDriver
    fake_irmc = ironic.drivers.fake:FakeIRMCDriver
    fake_ucs = ironic.drivers.fake:FakeUcsDriver
    fake_cimc = ironic.drivers.fake:FakeCIMCDriver
    fake_oneview = ironic.drivers.fake:FakeOneViewDriver
    iscsi_ilo = ironic.drivers.ilo:IloVirtualMediaIscsiDriver
    iscsi_irmc = ironic.drivers.irmc:IRMCVirtualMediaIscsiDriver
    iscsi_pxe_oneview = ironic.drivers.oneview:ISCSIPXEOneViewDriver
    pxe_ipmitool = ironic.drivers.ipmi:PXEAndIPMIToolDriver
    pxe_ipmitool_socat = ironic.drivers.ipmi:PXEAndIPMIToolAndSocatDriver
    pxe_ssh = ironic.drivers.pxe:PXEAndSSHDriver
    pxe_ilo = ironic.drivers.pxe:PXEAndIloDriver
    pxe_drac = ironic.drivers.drac:PXEDracDriver
    pxe_drac_inspector = ironic.drivers.drac:PXEDracInspectorDriver
    pxe_snmp = ironic.drivers.pxe:PXEAndSNMPDriver
    pxe_irmc = ironic.drivers.pxe:PXEAndIRMCDriver
    pxe_ucs = ironic.drivers.pxe:PXEAndUcsDriver
    pxe_iscsi_cimc = ironic.drivers.pxe:PXEAndCIMCDriver
    pxe_agent_cimc = ironic.drivers.agent:AgentAndCIMCDriver

ironic.hardware.interfaces.boot =
    fake = ironic.drivers.modules.fake:FakeBoot
    pxe = ironic.drivers.modules.pxe:PXEBoot
    irmc-virtual-media = ironic.drivers.modules.irmc.boot:IRMCVirtualMediaBoot

ironic.hardware.interfaces.console =
    fake = ironic.drivers.modules.fake:FakeConsole
    ipmitool-shellinabox = ironic.drivers.modules.ipmitool:IPMIShellinaboxConsole
    ipmitool-socat = ironic.drivers.modules.ipmitool:IPMISocatConsole
    no-console = ironic.drivers.modules.noop:NoConsole

ironic.hardware.interfaces.deploy =
    direct = ironic.drivers.modules.agent:AgentDeploy
    iscsi = ironic.drivers.modules.iscsi_deploy:ISCSIDeploy
    fake = ironic.drivers.modules.fake:FakeDeploy

ironic.hardware.interfaces.inspect =
    fake = ironic.drivers.modules.fake:FakeInspect
    inspector = ironic.drivers.modules.inspector:Inspector
    no-inspect = ironic.drivers.modules.noop:NoInspect
    irmc = ironic.drivers.modules.irmc.inspect:IRMCInspect

ironic.hardware.interfaces.management =
    fake = ironic.drivers.modules.fake:FakeManagement
    ipmitool = ironic.drivers.modules.ipmitool:IPMIManagement
    irmc = ironic.drivers.modules.irmc.management:IRMCManagement

ironic.hardware.interfaces.network =
    flat = ironic.drivers.modules.network.flat:FlatNetwork
    noop = ironic.drivers.modules.network.noop:NoopNetwork
    neutron = ironic.drivers.modules.network.neutron:NeutronNetwork

ironic.hardware.interfaces.power =
    fake = ironic.drivers.modules.fake:FakePower
    ipmitool = ironic.drivers.modules.ipmitool:IPMIPower
    irmc = ironic.drivers.modules.irmc.power:IRMCPower

ironic.hardware.interfaces.raid =
    agent = ironic.drivers.modules.agent:AgentRAID
    fake = ironic.drivers.modules.fake:FakeRAID
    no-raid = ironic.drivers.modules.noop:NoRAID

ironic.hardware.interfaces.rescue =
    no-rescue = ironic.drivers.modules.noop:NoRescue

ironic.hardware.interfaces.storage =
    fake = ironic.drivers.modules.fake:FakeStorage
    noop = ironic.drivers.modules.storage.noop:NoopStorage

ironic.hardware.interfaces.vendor =
    fake = ironic.drivers.modules.fake:FakeVendorB
    no-vendor = ironic.drivers.modules.noop:NoVendor

ironic.hardware.types =
    fake-hardware = ironic.drivers.fake_hardware:FakeHardware
    manual-management = ironic.drivers.generic:ManualManagementHardware
    ipmi = ironic.drivers.ipmi:IPMIHardware
    irmc = ironic.drivers.irmc:IRMCHardware

ironic.database.migration_backend =
    sqlalchemy = ironic.db.sqlalchemy.migration

tempest.test_plugins =
    ironic_tests = ironic_tempest_plugin.plugin:IronicTempestPlugin

[pbr]
autodoc_index_modules = True
autodoc_exclude_modules =
    ironic.db.sqlalchemy.alembic.env
    ironic.db.sqlalchemy.alembic.versions.*
    ironic_tempest_plugin.*

[build_sphinx]
all_files = 1
build-dir = doc/build
source-dir = doc/source
warning-is-error = 1

[egg_info]
tag_build =
tag_date = 0
tag_svn_revision = 0

[compile_catalog]
directory = ironic/locale
domain = ironic

[update_catalog]
domain = ironic
output_dir = ironic/locale
input_file = ironic/locale/ironic.pot

[extract_messages]
keywords = _ gettext ngettext l_ lazy_gettext
mapping_file = babel.cfg
output_file = ironic/locale/ironic.pot

[wheel]
universal = 1
